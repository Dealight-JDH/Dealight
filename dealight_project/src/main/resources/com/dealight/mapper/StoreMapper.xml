<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
  
  
  <!-- 동인 -->
  <!-- 다울 -->
<mapper namespace="com.dealight.mapper.StoreMapper">

	<resultMap type="com.dealight.domain.StoreDTO" id="StoreDTO">
		<result column="store_id" property="storeId"/>
  		<result column="store_nm" property="name"/>
  		<result column="buser_id" property="buserId"/>
	</resultMap>
	
	<!-- 종우 -->
	<select id="storeList" resultMap="StoreDTO">
	  	select s.store_id, s.store_nm, b.buser_id
	  	from tbl_store s, tbl_bstore b
	  	where s.store_id = b.store_id
	 </select>
	 
	 <select id="findByStoreId" parameterType="Long" resultMap="StoreDTO">
	 	select s.store_id, s.store_nm, b.buser_id
	  	from tbl_store s, tbl_bstore b
	  	where s.store_id = #{storeId} and s.store_id = b.store_id
	 </select>

	<!-- <resultMap type="com.dealight.domain.StoreVO" id="StoreVO">
  		<result column="store_id" property="storeId"/>
  		<result column="store_nm" property="storeNm"/>
  		<result column="telno" property="telno"/>
  		<result column="cls_cd" property="clsCd"/>
		<collection property="loc" resultMap="StoreLocVO"/>
		<collection property="bstore" resultMap="BStoreVO"/>
		<collection property="eval" resultMap="StoreEvalVO"/>
		nStore에 관해서 작성하지않음
		이미지를 리스트로 받아야한다.
  	</resultMap>
  	
  	<resultMap type="com.dealight.domain.BStoreVO" id="BStoreVO">
   		<result column="store_id" property="storeId"/> 
  		<result column="buser_id" property="buserId"/>
  		<result column="brch" property="brch"/>
  		<result column="rep_menu" property="repMenu"/>
  		<result column="rep_img" property="repImg"/>
  		<result column="seat_stus_cd" property="seatStusCd"/>
  		<result column="open_tm" property="openTm"/>
  		<result column="close_tm" property="closeTm"/>
  		<result column="break_sttm" property="breakSttm"/>
  		<result column="break_entm" property="breakEntm"/>
  		<result column="last_ord_tm" property="lastOrdTm"/>
  		<result column="n1_seat_no" property="n1SeatNo"/>
  		<result column="n2_seat_no" property="n2SeatNo"/>
  		<result column="n4_seat_no" property="n4SeatNo"/>
  		<result column="store_intro" property="storeIntro"/>
  		<result column="avg_meal_tm" property="avgMealTm"/>
  		<result column="hldy" property="hldy"/>
  		<result column="acm_pnum" property="acmPnum"/>
  		핫딜관련 collection
  		tag collection
  		menu collection
  	</resultMap>
  	
  	<resultMap type="com.dealight.domain.StoreLocVO" id="StoreLocVO">
		<result column="store_id" property="storeId"/>
  		<result column="addr" property="addr"/>
  		<result column="lat" property="lat"/>
  		<result column="lng" property="lng"/>
  	</resultMap>
  	
  	<resultMap type="com.dealight.domain.StoreEvalVO" id="StoreEvalVO">
  		<result column="store_id" property="storeId"/>
  		<result column="avg_rating" property="avgRating"/>
  		<result column="revw_tot_num" property="revwTotNum"/>
  		<result column="like_tot_num" property="likeTotNum"/>
  	</resultMap> -->
  	
  	<resultMap id="StoreVO" type="com.dealight.domain.StoreVO">
		<result column="store_id" property="storeId" />
		<result column="store_nm" property="storeNm" />
		<result column="telno" property="telno" />
		<result column="cls_cd" property="clsCd" />

		<association property="bstore" javaType="com.dealight.domain.BStoreVO">
			<result column="buser_id" property="buserId" />
			<result column="seat_stus_cd" property="seatStusCd" />
			<result column="rep_img" property="repImg" />
			<result column="rep_menu" property="repMenu" />
			<result column="brch" property="brch" />
			<result column="open_tm" property="openTm" />
			<result column="close_tm" property="closeTm" />
			<result column="break_sttm" property="breakSttm" />
			<result column="break_entm" property="breakEntm" />
			<result column="last_ord_tm" property="lastOrdTm" />
			<result column="n1_seat_no" property="n1SeatNo" />
			<result column="n2_seat_no" property="n2SeatNo" />
			<result column="n4_seat_no" property="n4SeatNo" />
			<result column="store_intro" property="storeIntro" />
			<result column="avg_meal_tm" property="avgMealTm" />
			<result column="hldy" property="hldy" />
			<result column="acm_pnum" property="acmPnum" />
			
			<association property="htdl" javaType="com.dealight.domain.HtdlVO">
				<result column="htdl_id" property="htdlId" />
				<result column="brch" property="brch" />
				<result column="htdl_img" property="htdlImg" />
				<result column="name" property="name" />
				<result column="set_name" property="setName" />
				<result column="dc_rate" property="dcRate" />
				<result column="start_tm" property="startTm" />
				<result column="end_tm" property="endTm" />
				<result column="lmt_pnum" property="lmtPnum" />
				<result column="intro" property="intro" />
				<result column="bef_price" property="befPrice" />
				<result column="ddct" property="ddct" />
				<result column="cur_pnum" property="curPnum" />
				<result column="stus_cd" property="stusCd" />
			</association>

			<collection property="tag" ofType="com.dealight.domain.StoreTagVO">
				<result property="storeId" column="store_id" />
				<result property="tagNm" column="tag_nm" />
			</collection>
			
			<collection property="menus" ofType="com.dealight.domain.MenuVO">
				<result property="storeId" column="store_id" />
				<result property="menuSeq" column="menu_seq" />
				<result property="price" column="price" />
				<result property="imgUrl" column="menu_img" />
				<result property="name" column="menu_name" />
				<result property="recoMenu" column="reco_menu" />
			</collection>
			
			
			<!-- <collection property="revws" ofType="RevwVO"> <result property="id" 
				column="id" /> <result property="storeId" column="store_id" /> <result property="rsvdId" 
				column="rsvd_id" /> <result property="waitId" column="wait_id" /> <result 
				property="userId" column="user_id" /> <result property="cnts" column="cnts" 
				/> <result property="regDt" column="reg_dt" /> <result property="rating" 
				column="rating" /> <result property="replyCnts" column="reply_cnts" /> <result 
				property="replyRegDt" column="reply_reg_dt" /> </collection> -->
				
			<collection property="waits" ofType="com.dealight.domain.WaitVO">
				<result property="waitId" column="wait_id" />
				<result property="storeId" column="store_id" />
				<result property="userId" column="user_id" />
				<result property="waitRegTm" column="regdate" />
				<result property="waitPnum" column="wait_pnum" />
				<result property="custTelno" column="cust_telno" />
				<result property="waitStusCd" column="wait_stus_cd" />
				<result property="custNm" column="cust_nm" />
				<result property="waitStusCd" column="wait_stus_cd" />
				<result property="waitTot" column="wait_tot" />
				<result property="revwStus" column="revw_stus" />
				<result property="waitTot" column="wait_tot" />
			</collection>
		</association>
		<!-- 다울  nstore-->
		<association property="nstore" javaType="com.dealight.domain.NStoreVO">
			<result column="store_id" property="storeId" />
			<result column="biz_tm" property="bizTm" />
			<result column="menu" property="menu" />
		</association>
		<!-- 다울  nstore end-->
		<association property="loc" javaType="com.dealight.domain.StoreLocVO">
			<result property="storeId" column="store_id" />
			<result property="addr" column="addr" />
			<result property="lat" column="lat" />
			<result property="lng" column="lng" />
		 </association>
		 
		<association property="eval"
			javaType="com.dealight.domain.StoreEvalVO">
			<result property="storeId" column="store_id" />
			<result property="avgRating" column="avg_rating" />
			<result property="revwTotNum" column="revw_tot_num" />
			<result property="likeTotNum" column="like_tot_num" />
		</association>
		
		<collection property="imgs" ofType="com.dealight.domain.StoreImgVO">
			<result property="storeId" column="store_id" />
			<result property="uuid" column="uuid" />
			<result property="uploadPath" column="uploadPath" />
			<result property="rep" column="rep" />
			<result property="imgSeq" column="img_seq" />
			<result property="fileName" column="fileName" />
		</collection>
	</resultMap>
	
<!-- 	<select id="getStoreCd" resultType="String">
		select cls_cd from tbl_store
		where
		store_id = #{storeId}
	</select> -->


<!-- <resultMap type="com.dealight.domain.NStoreVO" id="NStoreVO">
    <result column="store_id" property="storeId"/>
    <result column="biz_tm" property="bizTm"/>
    <result column="menu" property="menu"/>
</resultMap>

<resultMap type="com.dealight.domain.BStoreVO" id="BStoreVO">
    <result column="store_id" property="storeId"/>
    <result column="buser_id" property="buserId"/>
    <result column="seat_stus_cd" property="seatStusCd"/>
    <result column="open_tm" property="openTm"/>
    <result column="close_tm" property="closeTm"/>
    <result column="break_sttm" property="breakSttm"/>
    <result column="break_entm" property="breakEntm"/>
    <result column="last_ord_tm" property="lastOrdTm"/>
    <result column="n1_seat_no" property="n1SeatNo"/>
    <result column="n2_seat_no" property="n2SeatNo"/>
    <result column="n4_seat_no" property="n4SeatNo"/>
    <result column="store_intro" property="storeIntro"/>
    <result column="avg_meal_tm" property="avgMealTm"/>
    <result column="hldy" property="hldy"/>
    <result column="acm_pnum" property="acmPnum"/>
</resultMap>

<resultMap type="com.dealight.domain.StoreVO" id="StoreVO">
    <result column="store_id" property="storeId"/>
    <result column="store_nm" property="storeNm"/>
    <result column="telno" property="telno"/>
    <result column="cls_cd" property="clsCd"/>
    <collection property="nstore" resultMap="NStoreVO"/>
    <collection property="bstore" resultMap="BStoreVO"/>
</resultMap> -->

<sql id="criteria">
	<where>
		<choose>
			<when test="type == 'I'.toString()">
				user_id like '%'||#{keyword}||'%'
			</when>
			<when test="type == 'S'.toString()">
				store_nm like '%'||#{keyword}||'%'
			</when>
		</choose>
     </where> 
     <if test="sortType == 'D'.toString()">
	 order by store_id
	 </if>
</sql>

	<select id="findStoreListWithPaging" resultMap="StoreVO">
			SELECT
			    store_id, store_nm, telno, cls_cd, regdate, updatedate
			FROM
			(
			    
			    SELECT *
			    FROM
			    (
			    SELECT rownum rn, store_id, store_nm, telno, cls_cd, regdate, updatedate
			    FROM tbl_store
			    <include refid="criteria"></include>
			    )
		<![CDATA[
			    WHERE store_id > 0
			    AND rownum <= #{pageNum} * #{amount}
			)
			WHERE rn > (#{pageNum} -1) * #{amount}
		]]>
	</select>
	
	<select id="getTotalCnt" resultType="int">
		SELECT COUNT(*)
		FROM
		(
		SELECT *
        FROM tbl_store
		<include refid="criteria"></include>
		)
		WHERE store_id > 0
	</select>

	<select id="findByUserId" resultType="com.dealight.domain.StoreVO">
		SELECT
		*
		FROM tbl_store
		where
		store_id = #{storeId}
	</select>
		
	<!--다울 nstore Mapper-->
	<select id="getNstore" resultMap="StoreVO">
		select s.store_id,s.store_nm,
		n.biz_tm,n.menu,
		e.like_tot_num,
		i.img_seq,i.fileName
		l.lat, l.lng
		from tbl_store
		s,tbl_nstore n, tbl_store_loc l, tbl_store_eval e,
		tbl_store_img i
		where s.store_id =n.store_id
		and s.store_id = l.store_id
		and s.store_id
		= e.store_id
		and s.store_id=i.store_id(+)
		and s.store_id = #{storeId}
	
	</select>
<!--다울 nstore Mapper end-->

	<!-- bstore -->
	<select id="getBstore" resultMap="StoreVO">
		select
			b.break_entm,b.last_ord_tm,b.n1_seat_no,b.n2_seat_no,b.n4_seat_no,b.store_intro,b.avg_meal_tm,b.hldy,b.acm_pnum,
			b.buser_id,b.seat_stus_cd,b.open_tm,b.close_tm, b.break_sttm,
			h.htdl_id,h.name,h.dc_rate,h.start_tm,h.end_tm,h.lmt_pnum,h.intro,h.bef_price,h.ddct,h.cur_pnum,h.stus_cd,
			h.htdl_img, h.set_name, h.brch,
			m.menu_seq,m.name menu_name, m.price,m.img_url menu_img, m.reco_menu,
			ROUND(e.avg_rating,2) avg_rating,e.revw_tot_num,e.like_tot_num,
			s.store_id,s.store_nm,s.telno,
			i.img_seq,i.fileName,i.uuid,i.uploadpath,i.rep,
			l.addr,l.lat,l.lng,
			w.wait_tot,
			t.tag_nm
		from tbl_store s,tbl_store_loc l,tbl_store_eval e,
			 tbl_store_img i,tbl_bstore b, tbl_menu m,tbl_store_tag t,
			 (	select	store_id,count(wait_id) wait_tot
				from tbl_wait
				where   wait_stus_cd='W'
					and store_id = #{storeId}
				GROUP by store_id
			 ) w,
			 (	select htdl_id,name,dc_rate,start_tm,end_tm,lmt_pnum,intro,bef_price,ddct,cur_pnum,stus_cd,store_id,
			 		   htdl_img, set_name, brch
			 	from tbl_htdl
			 	where  store_id = #{storeId}
					and stus_cd != 'I'
			 )h
			 
		where s.store_id = #{storeId}
			and s.store_id = l.store_id
			and s.store_id = b.store_id
			and s.store_id = e.store_id
			and s.store_id = h.store_id(+)
			and s.store_id = w.store_id(+)
			and s.store_id = t.store_id(+)
			and s.store_id = i.store_id(+)
			and s.store_id = m.store_id(+)
	</select>
	
	

	<select id="getList" resultType="com.dealight.domain.StoreVO">
	
	<![CDATA[
	
		select * from tbl_store where store_id > 0
	
	]]>
	</select>

	
	<insert id="insertSelectKey">
		<selectKey keyProperty="storeId" order="BEFORE" resultType="Long" >
			select seq_store.nextval from dual
		</selectKey>
		
		insert into tbl_store (store_id, store_nm, telno, cls_cd)
		values (#{storeId}, #{storeNm}, #{telno}, #{clsCd})
	</insert>
  	<select id="read" resultType="com.dealight.domain.StoreVO" >
  		select * from tbl_store where store_id = #{storeId}
  	</select>
  
  	<select id="readAllInfo" resultType="com.dealight.domain.StoreVO" resultMap="StoreVO">
  		select s.store_id, s.store_nm, s.telno, s.cls_cd, l.addr, l.lat, l.lng,
  			   b.buser_id, b.brch, b.rep_menu, b.rep_img, b.seat_stus_cd,
  			   b.open_tm, b.close_tm, b.break_sttm, b.break_entm, b.last_ord_tm, 
  			   b.n1_seat_no, b.n2_seat_no, b.n4_seat_no, b.store_intro, b.avg_meal_tm, b.hldy, b.acm_pnum, 
  			   ROUND(e.avg_rating,2) avg_rating, e.revw_tot_num, e.like_tot_num
  		from tbl_store s , tbl_bstore b, tbl_store_loc l, tbl_store_eval e
  		where s.store_id = #{storeId} 
  		  and s.store_id = b.store_id 
  		  and s.store_id = l.store_id 
  		  and e.store_id = s.store_id 	
  	</select>
  
  	<update id="update">
  		update tbl_store
  		set store_nm = #{storeNm},
  			telno = #{telno},
  			cls_cd = #{clsCd}
  		where store_id = #{storeId}
  	</update>
  
  	<delete id="delete">
  		delete from tbl_store where store_id = #{storeId}
  	</delete>
  	
  	<select id="getListAllInfo" resultType="com.dealight.domain.StoreVO" resultMap="StoreVO">
  		select s.store_id, s.store_nm, s.telno, s.cls_cd, l.addr, l.lat, l.lng,
  			   b.buser_id, b.brch, b.rep_menu, b.rep_img, b.seat_stus_cd, b.open_tm, 
  			   b.close_tm, b.break_sttm, b.break_entm, b.last_ord_tm, b.n1_seat_no, 
  			   b.n2_seat_no, b.n4_seat_no, b.store_intro, b.avg_meal_tm, b.hldy, b.acm_pnum,
  			   ROUND(e.avg_rating,2) avg_rating, e.revw_tot_num, e.like_tot_num
  		from tbl_store s , tbl_bstore b, tbl_store_loc l, tbl_store_eval e
  		where s.store_id = b.store_id 
  		  and s.store_id = l.store_id 
  		  and e.store_id = s.store_id
  	</select>
  	
  	<select id="findByUserIdJoinBStore" parameterType="com.dealight.domain.StoreVO" resultMap="StoreVO">
		select s.store_id, s.store_nm, s.telno, s.cls_cd, b.buser_id,
			   b.seat_stus_cd, b.open_tm, b.close_tm,b.break_sttm, 
			   b.break_entm, b.last_ord_tm, b.n1_seat_no, b.n2_seat_no, 
			   b.n4_seat_no, b.store_intro, b.avg_meal_tm, b.hldy, b.acm_pnum,
			   b.rep_menu, b.rep_img, b.brch
		from tbl_store s, tbl_bstore b
		where s.store_id = b.store_id 
		  AND b.buser_id = #{userId}
	</select>

	<select id="findByIdJoinNStore" parameterType="com.dealight.domain.StoreVO" resultMap="StoreVO">
		select s.store_id, s.store_nm, s.telno, s.cls_cd, n.biz_tm, n.menu
		from tbl_store s, tbl_nstore n
		where s.store_id = #{storeId} AND s.store_id = n.store_id
	</select>
	
	<select id="findByIdJoinBStore" parameterType="com.dealight.domain.StoreVO" resultMap="StoreVO">
		select s.store_id, s.store_nm, s.telno, s.cls_cd, b.buser_id, b.seat_stus_cd, b.open_tm, b.close_tm,
					b.break_sttm, b.break_entm, b.last_ord_tm, b.n1_seat_no, b.n2_seat_no, b.n4_seat_no,
					b.store_intro, b.avg_meal_tm, b.hldy, b.acm_pnum, b.rep_menu, b.rep_img, b.brch
		from tbl_store s, tbl_bstore b
		where s.store_id = #{storeId} AND s.store_id = b.store_id
	</select>
	
	<select id="findStoreWithLocByStoreId" resultMap="StoreVO">
		select *
		FROM tbl_store s, tbl_store_loc l
		where s.store_id = #{storeId}
		AND s.store_id = l.store_id
	</select>
	
	<select id="findStoreWithBstoreAndLocByStoreId" resultMap="StoreVO">
		select s.store_id, s.store_nm, s.telno, s.cls_cd, b.buser_id, b.seat_stus_cd, b.open_tm, b.close_tm,
			   b.break_sttm, b.break_entm, b.last_ord_tm, b.n1_seat_no, b.n2_seat_no, b.n4_seat_no,
			   b.store_intro, b.avg_meal_tm, b.hldy, b.acm_pnum, b.rep_menu, b.rep_img, b.brch,
			   l.addr, l.lat, l.lng
		from tbl_store s, tbl_bstore b, tbl_store_loc l
		WHERE s.store_id = b.store_id
		AND s.store_id = l.store_id
		AND s.store_id = #{storeId}
	</select>
	
	<update id="suspendStore">
		UPDATE tbl_store
		SET cls_cd = 'I'
		WHERE store_id = #{storeId}
	</update>

</mapper>
