<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dealight.mapper.RevwMapper">

	<resultMap id="RsvdWithWaitDTO" type="com.dealight.domain.RsvdWithWaitDTO">
			
		<result property="storeId" column="store_id" />
		<result property="userId" column="user_id" />
		<result property="time" column="time" />
		<result property="revwStus" column="revw_stus" />
			
		<collection property="rsvd" ofType="com.dealight.domain.RsvdVO">
			<result property="rsvdId" column="rsvd_id" />
			<result property="htdlId" column="htdl_id" />
			<result property="aprvNo" column="aprv_no" />
			<result property="pnum" column="pnum" />
			<result property="stusCd" column="stus_cd" />
			<result property="totAmt" column="tot_amt" />
			<result property="totQty" column="tot_qty" />
		</collection>
		<collection property="wait" ofType="com.dealight.domain.WaitVO">
			<result property="waitId" column="wait_id" />
			<result property="waitPnum" column="wait_pnum" />
			<result property="custTelno" column="cust_telno" />
			<result property="custNm" column="cust_nm" />
			<result property="waitStusCd" column="wait_stus_cd" />
		</collection>
	</resultMap>

	<select id="getWritableListWithPagingByUserId" resultMap="RsvdWithWaitDTO">
	<![CDATA[
		select rsvd_id,htdl_id,aprv_no,pnum,stus_cd,tot_amt,tot_qty,wait_pnum,cust_telno,cust_nm,wait_stus_cd,
		        wait_id,revw_stus,user_id,store_id,time
		from
		(
		SELECT rownum rn, rs.rsvd_id,rs.htdl_id,rs.aprv_no,rs.pnum,rs.stus_cd,rs.tot_amt,rs.tot_qty,rs.wait_pnum,rs.cust_telno,rs.cust_nm,rs.wait_stus_cd,
		        rs.wait_id,rs.revw_stus,rs.user_id,rs.store_id, rs.time
		FROM 
		(
		    (
		    SELECT rsvd_id,htdl_id,aprv_no,pnum,stus_cd,tot_amt,tot_qty,
		        NULL AS wait_pnum,NULL AS cust_telno,NULL AS cust_nm,NULL AS wait_stus_cd, NULL AS wait_id,
		        revw_stus,user_id,store_id,time 
		    FROM tbl_rsvd r 
		    WHERE user_id = #{userId}
		    AND revw_stus = 0
		    AND stus_cd = 'L'
		        )
		    UNION ALL
		    (
		    SELECT NULL AS rsvd_id,NULL AS htdl_id,NULL AS aprv_no,NULL AS pnum,NULL AS stus_cd,NULL AS tot_amt,NULL AS tot_qty,
		    wait_pnum,cust_telno,cust_nm,wait_stus_cd, wait_id,
		    revw_stus,user_id,store_id,wait_reg_tm time 
		    FROM tbl_wait w 
		    WHERE user_id = #{userId}
		    AND revw_stus = 0
		    AND wait_stus_cd = 'E'
		    )
		    ORDER BY time DESC
		) rs
		WHERE rownum <= #{cri.pageNum}*#{cri.amount}
		) r
		where r.rn > (#{cri.pageNum}-1)*#{cri.amount}
	]]>
	</select>
	
	<select id="findRevwWtihImgsByRsvdId" resultMap="RevwVO">
		select *
		from tbl_revw r, tbl_revw_img i
		where rsvd_id = #{rsvdId}
		AND r.revw_id = i.revw_id(+)		
	</select>
	
	<select id="findRevwWtihImgsByWaitId" resultMap="RevwVO">
		select *
		from tbl_revw r, tbl_revw_img i
		where wait_id = #{waitId}
		AND r.revw_id = i.revw_id(+)
	</select>
	
	<select id="countWritableWait" resultType="int">
		select COUNT(*)
		from tbl_wait
		where revw_stus = 0 AND user_id = #{userId} AND wait_stus_cd = 'E'
	</select>
	
	<select id="countWritableRsvd" resultType="int">
		select COUNT(*)
		from tbl_rsvd
		where revw_stus = 0 AND user_id = #{userId}	AND stus_cd = 'L'
	</select>

	<select id="getRevwListWithPagingByStoreId"
		resultMap="RevwVO">
		<![CDATA[ 
		select  r.rn, r.revw_id, r.store_id, r.rsvd_id, r.wait_id, r.user_id, r.cnts, r.reg_dt, r.rating, r.reply_cnts, r.reply_reg_dt, r.regdate, r.updatedate, r.store_nm,
				i.img_seq, i.filename, i.uuid, i.uploadpath, i.image
		from
		(
			select /*+ INDEX DESC(tbl_revw tbl_revw_pk)*/
			rownum rn,revw_id, store_id, rsvd_id, wait_id, user_id, cnts, reg_dt, rating, reply_cnts, reply_reg_dt, regdate, updatedate, store_nm
			from tbl_revw
			where store_id = #{storeId}
			and rownum <= #{cri.pageNum}*#{cri.amount}
		) r, tbl_revw_img i
		where r.rn > (#{cri.pageNum}-1)*#{cri.amount}
		AND r.revw_id = i.revw_id(+)
	]]>
	</select>
	
	<select id="getRevwListWithPagingByUserId"
		resultMap="RevwVO">
		<![CDATA[ 
		select  r.revw_id, r.store_id, r.rsvd_id, r.wait_id, r.user_id, r.cnts, r.reg_dt, r.rating, r.reply_cnts, r.reply_reg_dt, r.regdate, r.updatedate, r.store_nm,
				i.img_seq, i.filename, i.uuid, i.uploadpath, i.image, i.rep
		from
		(
			select /*+ INDEX DESC(tbl_revw tbl_revw_pk)*/
			rownum rn,revw_id, store_id, rsvd_id, wait_id, user_id, cnts, reg_dt, rating, reply_cnts, reply_reg_dt, regdate, updatedate, store_nm
			from tbl_revw
			where user_id = #{userId}
			and rownum <= #{cri.pageNum}*#{cri.amount}
		) r, tbl_revw_img i
		where rn > (#{cri.pageNum}-1)*#{cri.amount}
		AND r.revw_id = i.revw_id(+)
	]]>
	</select>

	<select id="getCountByStoreId" resultType="int">
		select count(*) from tbl_revw where store_id = #{storeId}
	</select>

<!-- RevwVO -->
<resultMap type="com.dealight.domain.RevwVO" id="RevwVO">
	<result property="revwId" column="revw_id" />
	<result property="storeId" column="store_id" />
	<result property="storeNm" column="store_nm" />
	<result property="rsvdId" column="rsvd_id" />
	<result property="waitId" column="wait_id" />
	<result property="userId" column="user_id" />
	<result property="cnts" column="cnts"  />
	<result property="rating" column="rating" />
	
	<result property="regdate" column="reg_dt" />
	
	<result property="replyCnts" column="reply_cnts" jdbcType="VARCHAR" />
	<result property="replyRegDt" column="reply_reg_dt" jdbcType="VARCHAR" />
	<result property="updatedate" column="updatedapte" />
	
	<collection property="imgs" resultMap="RevwImgVO" />
</resultMap>

<!-- RevwImgVO -->
<resultMap type="com.dealight.domain.RevwImgVO" id="RevwImgVO">
	<result property="revwId" column="revw_id" />
	<result property="imgSeq" column="img_seq" />
	<result property="fileName" column="filename" />
	<result property="uuid" column="uuid" />
	<result property="uploadPath" column="uploadpath" />
	<result property="image" column="image" />
	<result property="regdate" column="regdate" />
	<result property="updatedate" column="updatedate" />
</resultMap>

<!-- StoreVO -->
<resultMap type="com.dealight.domain.StoreVO" id="StoreVO">
	<result property="storeId" column="store_id" />
	<result property="storeNm" column="store_nm" />
	<result property="telno" column="telno" />
	<result property="clsCd" column="cls_cd" />
	<result property="regdate" column="regdate" />
	<result property="updatedate" column="updatedate" />
</resultMap>

<!-- BStoreVO -->
<resultMap type="com.dealight.domain.BStoreVO" id="BStoreVO">
	<result property="storeId" column="store_id" />
	<result property="repImg" column="rep_img" />
</resultMap>

<!-- RsvdVO -->
<resultMap type="com.dealight.domain.RsvdVO" id="RsvdVO">
	<result property="rsvdId" column="rsvd_id" />
	<result property="storeId" column="store_id" />
	<result property="userId" column="user_id" />
	<result property="htdlId" column="htdl_id" />
	<result property="aprvNo" column="aprv_no" />
	<result property="pnum" column="pnum" />
	<result property="time" column="time" />
	<result property="stusCd" column="stus_cd" />
	<result property="totAmt" column="tot_amt" />
	<result property="totQty" column="tot_qty" />
	<result property="revwStus" column="revw_stus" />
			
	<result property="regdate" column="regdate" />
	<result property="updatedate" column="updatedate" />

	<collection property="rsvdDtlsList" resultMap="RsvdDtlsVO" />
</resultMap>

<!-- RsvdDtlsVO -->
<resultMap type="com.dealight.domain.RsvdDtlsVO" id="RsvdDtlsVO">
	<result property="rsvdId" column="rsvd_id" />
	<result property="rsvdSeq" column="rsvd_seq" />
	<result property="menuNm" column="menu_nm" />
	<result property="menuTotQty" column="menu_tot_qty" />
	<result property="menuPrc" column="menu_prc" />
	<result property="regdate" column="regdate" />
	<result property="updatedate" column="updatedate" />
</resultMap>

<!-- WaitVO -->
<resultMap type="com.dealight.domain.WaitVO" id="WaitVO">
	<result property="waitId" column="wait_id" />
	<result property="storeId" column="store_id" />
	<result property="userId" column="user_id" jdbcType="VARCHAR" />
	<result property="waitRegTm" column="wait_reg_tm" />
	<result property="waitPnum" column="wait_pnum" />
	<result property="custTelno" column="cust_telno" />
	<result property="custNm" column="cust_nm" />
	<result property="waitStusCd" column="wait_stus_cd" />
	<result property="revwStus" column="revw_stus" />
	
	<collection property="store" resultMap="StoreVO" />
	<collection property="bstore" resultMap="BStoreVO" />
</resultMap>


	<select id="findAll" resultType="com.dealight.domain.RevwVO">
		SELECT
		*
		FROM tbl_revw
	</select>


	<select id="findById" resultType="com.dealight.domain.RevwVO">
		SELECT
		*
		FROM tbl_revw
		where revw_id =
		#{revwId}
	</select>
	<select id="findRevwWtihImgsById" resultMap="RevwVO">
		SELECT r.revw_id, r.store_id, r.rsvd_id, r.wait_id, r.user_id, r.cnts, r.reg_dt, r.rating, r.reply_cnts, r.reply_reg_dt, r.regdate, r.updatedate, r.store_nm,
				i.img_seq, i.filename, i.uuid, i.uploadpath, i.image, i.rep
		FROM tbl_revw r,tbl_revw_img i
		where r.revw_id = #{revwId} AND r.revw_id = i.revw_id
	</select>

	<insert id="insert">
		INSERT
		INTO tbl_revw(revw_id, store_id, rsvd_id, wait_id,
		user_id, cnts, reg_dt, rating,reply_cnts,reply_reg_dt,store_nm)
		VALUES
		(seq_revw.nextval, #{storeId}, #{rsvdId, jdbcType=NUMERIC},
		#{waitId, jdbcType=NUMERIC}, #{userId}, #{cnts}, sysdate, #{rating},
		#{replyCnts}, #{replyRegDt},#{storeNm})
	</insert>

	<insert id="insertSelectKey">
		<selectKey keyProperty="revwId" order="BEFORE" resultType="long">
			select seq_revw.nextval from dual
		</selectKey>
		INSERT
		INTO tbl_revw(revw_id, store_id, rsvd_id, wait_id, user_id, cnts,
		reg_dt, rating,reply_cnts,reply_reg_dt,store_nm)
		VALUES
		(#{revwId}, #{storeId},
		#{rsvdId, jdbcType=NUMERIC}, #{waitId, jdbcType=NUMERIC}, #{userId},
		#{cnts}, sysdate, #{rating}, #{replyCnts}, #{replyRegDt},#{storeNm})
	</insert>

	<update id="update">
		UPDATE tbl_revw
		SET
		store_id = #{storeId},
		rsvd_id =
		#{rsvdId},
		wait_id = #{waitId},
		user_id = #{userId},
		cnts = #{cnts},
		reg_dt = #{regDt},
		rating = #{rating},
		reply_cnts = #{replyCnts},
		reply_reg_dt = #{replyRegDt}
		where revw_id = #{revwId}
	</update>

	<delete id="delete">
		DELETE
		FROM tbl_revw
		WHERE revw_id = #{revwId}
	</delete>

	<!-- 작성한 리뷰 리스트 가져오기 (현재 사진 첨부는 필수인 상태) -->
	<select id="getWrittenList" resultMap="RevwVO">
		select r.revw_id, r.store_id, r.rsvd_id, r.wait_id, r.user_id, r.cnts, r.reg_dt, r.rating, r.reply_cnts, r.reply_reg_dt, r.regdate, r.updatedate, r.store_nm,
				i.img_seq, i.fileName, i.uuid, i.uploadpath, i.image, i.rep
		from tbl_revw r, tbl_revw_img i
		where r.revw_id = i.revw_id
		and r.user_id = #{userId}
	</select>
	
	<select id="getWrittenListWtihPagingByUserId" resultMap="RevwVO">
	<![CDATA[ 
		select r.revw_id, r.store_id, r.rsvd_id, r.wait_id, r.user_id, r.cnts, r.reg_dt, r.rating, r.reply_cnts, r.reply_reg_dt, r.regdate, r.updatedate, r.store_nm,
				i.img_seq, i.fileName, i.uuid, i.uploadpath, i.image, i.rep
		from
		(
			select
			rownum rn,revw_id, store_id, rsvd_id, wait_id, user_id, cnts, reg_dt, rating, reply_cnts, reply_reg_dt, regdate, updatedate, store_nm
			from 
			(
            select
			revw_id, store_id, rsvd_id, wait_id, user_id, cnts, reg_dt, rating, reply_cnts, reply_reg_dt, regdate, updatedate, store_nm
			from tbl_revw
			where user_id = #{userId}
			ORDER BY regdate DESC
			)
			where rownum <= #{cri.pageNum}*#{cri.amount}
		) r, tbl_revw_img i
		where r.rn > (#{cri.pageNum}-1)*#{cri.amount}
		AND r.revw_id = i.revw_id(+)
		ORDER BY regdate DESC
	]]>
	</select>

	<!-- 작성한 리뷰 - 작성한 리뷰 수 -->
	<select id="countRevw" resultType="int">
		select count(*) 
		from tbl_revw
		where user_id = #{userId}
	</select>

	<!-- 딜라이트 예약 이용 횟수 -->
	<select id="countRsvd" resultType="int">
		select count(*) 
		from tbl_rsvd
		where user_id = #{userId}
	</select>
	
	<!-- 딜라이트 웨이팅 이용 횟수 -->
	<select id="countWait" resultType="int">
		select count(*) 
		from tbl_wait
		where user_id = #{userId}
	</select>

	<!-- 리뷰 작성 안 한 예약내역 -->
	<select id="getWritableListByRsvd" resultMap="RsvdVO">
		select r.user_id, r.rsvd_id, r.store_id, r.htdl_id, r.aprv_no, r.pnum, r.time, r.tot_amt, r.tot_qty,
				r.revw_stus, d.rsvd_seq, d.menu_nm, d.menu_tot_qty, d.menu_prc
		from 
		(
		select * from tbl_rsvd
		where stus_cd = 'L'
		and revw_stus = 0
		and user_id = #{userId}
		) r, tbl_rsvd_dtls d
		where r.rsvd_id = d.rsvd_id
	</select>

	<!-- 리뷰 작성 안 한 온라인 웨이팅 내역 -->
	<select id="getWritableListByWait" resultMap="WaitVO">
		select user_id, wait_id, wait_pnum, wait_reg_tm, store_id, wait_reg_tm, cust_telno, cust_nm, wait_stus_cd, revw_stus
		from tbl_wait
		where wait_stus_cd = 'E'
		and revw_stus = 0
		and user_id = #{userId}
	</select>


	<!-- 리뷰 사진 등록 -->
	<insert id="insertRevwImg">
		insert into tbl_revw_img(revw_id, img_seq, fileName, uuid, uploadpath, image, rep)
		values (#{revwId}, seq_revw_img.nextval, #{fileName}, #{uuid}, #{uploadPath}, #{image}, #{rep})
	</insert>
		
	<insert id="insertAllImgs" parameterType="java.util.List">
		INSERT ALL
			<foreach collection="list" item="revwImg">
			INTO tbl_revw_img
			(
			revw_id,
			img_seq,
			uuid,
			uploadpath,
			image,
			filename,
			rep
			)
			VALUES
				(
				#{revwImg.revwId},
				FN_GET_SEQ('seq_revw_img'),
				#{revwImg.uuid},
				#{revwImg.uploadPath},
				#{revwImg.image},
				#{revwImg.fileName},
				#{revwImg.rep}
				)
			</foreach>
			SELECT * FROM dual
	</insert>

	<!-- 예약의 리뷰 상태 1(작성됨)로 업데이트 -->
	<update id="addCntRsvdRevwStus">
		update tbl_rsvd
		set revw_stus = revw_stus + 1
		where rsvd_id = #{rsvdId}
	</update>
	
	<!-- 온라인 웨이팅의 리뷰 상태 1(작성됨)로 업데이트 -->
	<update id="addCntWaitRevwStus">
		update tbl_wait
		set revw_stus = revw_stus + 1
		where wait_id = #{waitId}
	</update>

	<!-- 매장측의 리뷰 답변 업데이트 -->
	<update id="regReply">
		update tbl_revw
		set reply_cnts = #{replyCnts},
		reply_reg_dt = sysdate
		WHERE revw_id = #{revwId}
	</update>
 
	<!-- 리뷰 삭제 -->
	<delete id="deleteRevw">
		delete from tbl_revw
		where revw_id = #{revwId}
	</delete>
	
	<select id="findRevwImgsByRevwId" resultType="com.dealight.domain.RevwImgVO">
		SELECT *
		FROM tbl_revw_img
		where revw_id = #{revwId}
	</select>

</mapper>